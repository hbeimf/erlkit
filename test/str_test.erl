-module(str_test).

-import(str, [disfix/2,
              replace/3,
              contains/2,
              startswith/2,
              endswith/2]).

-include_lib("eunit/include/eunit.hrl").

disfix_test() ->
    ?assertMatch("def", disfix("abc", "abcdef")),
    ?assertMatch("def", disfix(<<"abc">>, "abcdef")),
    ?assertMatch("abcdef", disfix("aabc", "abcdef")),
    ?assertMatch(<<"def">>, disfix("abc", <<"abcdef">>)),
    ?assertMatch(<<"def">>, disfix(<<"abc">>, <<"abcdef">>)),
    ?assertMatch(<<"abcdef">>, disfix("aabc", <<"abcdef">>)).

replace_test() ->
    ?assertMatch("x.y.z", replace("x y z", " ", ".")),
    ?assertMatch(<<"x.y.z">>, replace(<<"x y z">>, <<" ">>, <<".">>)).

contains_test() ->
    ?assertMatch(true, contains(<<"abc">>, $b)),
    ?assertMatch(true, contains(<<"abc">>, "b")),
    ?assertMatch(true, contains(<<"abc">>, <<"b">>)),
    ?assertMatch(true, contains(<<"abc">>, "bc")),
    ?assertMatch(true, contains(<<"abc">>, <<"bc">>)),
    ?assertMatch(true, contains(<<"abc">>, "abc")),
    ?assertMatch(true, contains(<<"abc">>, <<"abc">>)),
    ?assertMatch(true, contains(<<"abc">>, <<>>)),
    ?assertMatch(true, contains(<<"abc">>, "")),
    ?assertMatch(true, contains(<<>>, <<>>)),
    ?assertMatch(true, contains(<<>>, "")),
    ?assertMatch(true, contains("abc", $b)),
    ?assertMatch(true, contains("abc", "b")),
    ?assertMatch(true, contains("abc", <<"b">>)),
    ?assertMatch(true, contains("abc", "bc")),
    ?assertMatch(true, contains("abc", <<"bc">>)),
    ?assertMatch(true, contains("abc", "abc")),
    ?assertMatch(true, contains("abc", <<"abc">>)),
    ?assertMatch(true, contains("abc", <<>>)),
    ?assertMatch(true, contains("abc", "")),
    ?assertMatch(true, contains("", <<>>)),
    ?assertMatch(true, contains("", "")),
    ?assertMatch(false, contains(<<"abc">>, $d)),
    ?assertMatch(false, contains(<<"abc">>, "d")),
    ?assertMatch(false, contains(<<"abc">>, <<"d">>)),
    ?assertMatch(false, contains(<<"abc">>, "abcd")),
    ?assertMatch(false, contains(<<"abc">>, <<"abcd">>)),
    ?assertMatch(false, contains("abc", $d)),
    ?assertMatch(false, contains("abc", "d")),
    ?assertMatch(false, contains("abc", <<"d">>)),
    ?assertMatch(false, contains("abc", "abcd")),
    ?assertMatch(false, contains("abc", <<"abcd">>)),
    ?assertMatch(false, contains(<<>>, $a)),
    ?assertMatch(false, contains(<<>>, "a")),
    ?assertMatch(false, contains(<<>>, <<"a">>)),
    ?assertMatch(false, contains("", $a)),
    ?assertMatch(false, contains("", "a")),
    ?assertMatch(false, contains("", <<"a">>)).

startswith_test() ->
    ?assertMatch(true, startswith(<<"abc">>, <<>>)),
    ?assertMatch(true, startswith(<<"abc">>, [])),
    ?assertMatch(true, startswith(<<"abc">>, a)),
    ?assertMatch(true, startswith(<<"abc">>, $a)),
    ?assertMatch(true, startswith(<<"abc">>, <<"a">>)),
    ?assertMatch(true, startswith(<<"abc">>, "a")),
    ?assertMatch(true, startswith(<<"abc">>, <<"abc">>)),
    ?assertMatch(true, startswith(<<"abc">>, "abc")),
    ?assertMatch(true, startswith(<<"123">>, 1)),
    ?assertMatch(true, startswith("abc", <<>>)),
    ?assertMatch(true, startswith("abc", [])),
    ?assertMatch(true, startswith("abc", a)),
    ?assertMatch(true, startswith("abc", $a)),
    ?assertMatch(true, startswith("abc", <<"a">>)),
    ?assertMatch(true, startswith("abc", "a")),
    ?assertMatch(true, startswith("abc", <<"abc">>)),
    ?assertMatch(true, startswith("abc", "abc")),
    ?assertMatch(true, startswith("123", 1)),
    ?assertMatch(false, startswith(<<"abc">>, b)),
    ?assertMatch(false, startswith(<<"abc">>, $b)),
    ?assertMatch(false, startswith(<<"abc">>, <<"b">>)),
    ?assertMatch(false, startswith(<<"abc">>, "b")),
    ?assertMatch(false, startswith(<<"abc">>, "abcd")),
    ?assertMatch(false, startswith(<<"123">>, 1.0)),
    ?assertMatch(false, startswith("abc", b)),
    ?assertMatch(false, startswith("abc", $b)),
    ?assertMatch(false, startswith("abc", <<"b">>)),
    ?assertMatch(false, startswith("abc", "b")),
    ?assertMatch(false, startswith("abc", <<"abcd">>)),
    ?assertMatch(false, startswith("123", 1.0)).

endswith_test() ->
    ?assertMatch(true, endswith(<<"abc">>, <<>>)),
    ?assertMatch(true, endswith(<<"abc">>, [])),
    ?assertMatch(true, endswith(<<"abc">>, c)),
    ?assertMatch(true, endswith(<<"abc">>, $c)),
    ?assertMatch(true, endswith(<<"abc">>, <<"c">>)),
    ?assertMatch(true, endswith(<<"abc">>, "c")),
    ?assertMatch(true, endswith(<<"abc">>, <<"abc">>)),
    ?assertMatch(true, endswith(<<"abc">>, "abc")),
    ?assertMatch(true, endswith(<<"123">>, 3)),
    ?assertMatch(true, endswith("abc", <<>>)),
    ?assertMatch(true, endswith("abc", [])),
    ?assertMatch(true, endswith("abc", c)),
    ?assertMatch(true, endswith("abc", $c)),
    ?assertMatch(true, endswith("abc", <<"c">>)),
    ?assertMatch(true, endswith("abc", "c")),
    ?assertMatch(true, endswith("abc", <<"abc">>)),
    ?assertMatch(true, endswith("abc", "abc")),
    ?assertMatch(true, endswith("123", 3)),
    ?assertMatch(false, endswith(<<"abc">>, b)),
    ?assertMatch(false, endswith(<<"abc">>, $b)),
    ?assertMatch(false, endswith(<<"abc">>, <<"b">>)),
    ?assertMatch(false, endswith(<<"abc">>, "b")),
    ?assertMatch(false, endswith(<<"abc">>, "abcd")),
    ?assertMatch(false, endswith(<<"123">>, 3.0)),
    ?assertMatch(false, endswith("abc", b)),
    ?assertMatch(false, endswith("abc", $b)),
    ?assertMatch(false, endswith("abc", <<"b">>)),
    ?assertMatch(false, endswith("abc", "b")),
    ?assertMatch(false, endswith("abc", <<"abcd">>)),
    ?assertMatch(false, endswith("123", 3.0)).
